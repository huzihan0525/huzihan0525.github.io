<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">
  <title>Hexo</title>
  
  
  <link href="https://huzihan0525.github.io/atom.xml" rel="self"/>
  
  <link href="https://huzihan0525.github.io/"/>
  <updated>2021-10-08T14:18:18.625Z</updated>
  <id>https://huzihan0525.github.io/</id>
  
  <author>
    <name>Hu Zihan</name>
    
  </author>
  
  <generator uri="https://hexo.io/">Hexo</generator>
  
  <entry>
    <title>Build a Static Blog based on Hexo and GitHub</title>
    <link href="https://huzihan0525.github.io/2021/10/08/hexo-blog/"/>
    <id>https://huzihan0525.github.io/2021/10/08/hexo-blog/</id>
    <published>2021-10-08T02:21:16.000Z</published>
    <updated>2021-10-08T14:18:18.625Z</updated>
    
    <content type="html"><![CDATA[<span id="more"></span><p>在此感谢B站up主<a href="https://www.bilibili.com/video/BV1Ep411R7cJ">吃饱睡觉的猫</a>的视频教程。搭建此静态博客大致分为以下几步：工具准备(node.js, git, hexo)，仓库准备与SSH keys，生成本地博客与发布，修改Hexo主题</p><h2 id="工具准备"><a href="#工具准备" class="headerlink" title="工具准备"></a>工具准备</h2><h3 id="Node-js安装及环境配置"><a href="#Node-js安装及环境配置" class="headerlink" title="Node.js安装及环境配置"></a>Node.js安装及环境配置</h3><h4 id="Node-js简介"><a href="#Node-js简介" class="headerlink" title="Node.js简介"></a>Node.js简介</h4><p>Node.js 是运行在服务端的 JavaScript，Node.js 使用了一个事件驱动、非阻塞式 I/O 的模型，使其轻量又高效。Node.js 的包管理器 npm，用于node插件管理（包括安装、卸载、管理依赖等）。<br>Node.js 可以从<a href="https://nodejs.org/en/download/">官网</a>下载，这是下载时我的选择<img src="/images/node.js.png" alt="node.js"><img srcs="/images/node.js.png"></p><h4 id="Node-js安装"><a href="#Node-js安装" class="headerlink" title="Node.js安装"></a>Node.js安装</h4><p>按照默认点next安装，完成后打开cmd命令行，输入node -v 和 npm -v，出现版本号说明安装成功</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">C:\Users\m&gt;node -v</span><br><span class="line">v14.18.0</span><br><span class="line">C:\Users\m&gt;npm -v</span><br><span class="line">6.14.15</span><br></pre></td></tr></table></figure><h4 id="环境配置"><a href="#环境配置" class="headerlink" title="环境配置"></a>环境配置</h4><ul><li>安装完成之后在所设置的安装目录nodejs下创建两个文件夹【node_global】及【node_cache】</li></ul><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line">. # 「nodejs 根目录」</span><br><span class="line">├── node_modules # 「node 各模块目录」</span><br><span class="line">│   └── npm  </span><br><span class="line">├── node_global  # 「新创建的文件夹」</span><br><span class="line">├── node_cache   # 「新创建的文件夹」</span><br><span class="line">├── node.exe    </span><br><span class="line">├── node_etw_provider.man </span><br><span class="line">├── node.perfctr_provider.man </span><br><span class="line">├── nodevars.bat </span><br><span class="line">├── npm </span><br><span class="line">└── npm.cmd</span><br></pre></td></tr></table></figure><p>  创建完文件夹后，打开命令行窗口输入</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">npm config set prefix &quot;F:\DevTools\nodejs\node_global&quot;</span><br><span class="line">npm config set cache &quot;F:\DevTools\nodejs\node_cache&quot;</span><br></pre></td></tr></table></figure><p>  以上步骤为了以后使用npm install express [-g]命令时，将依赖包安装在以上路径，而不至于占用C盘空间</p><ul><li><strong>设置环境变量</strong>：“我的电脑”-“属性”-“高级系统设置”-“高级”-“环境变量”<br>新建<strong>系统变量</strong>，【NODE_PATH】为【F:\DevTools\nodejs\node_modules】如下图<img src="/images/nodepath_set.png" alt="nodeset1"><img srcs="/images/nodepath_set.png"><br>编辑<strong>用户变量</strong>，将默认npm地址改为之前设置的地址【F:\DevTools\nodejs\node_global】如下图  <img src="/images/nodepath_set2.png" alt="nodeset2"><img srcs="/images/nodepath_set2.png"><img src="/images/nodepath_set3.png" alt="nodeset3"><img srcs="/images/nodepath_set3.png"><h4 id="测试"><a href="#测试" class="headerlink" title="测试"></a>测试</h4>以管理员身份打开cmd命令行，全局安装包进行测试 npm install express -g<h3 id="Git-安装"><a href="#Git-安装" class="headerlink" title="Git 安装"></a>Git 安装</h3>Git 是一个免费的开源分布式版本控制系统，旨在快速高效地处理从小到大的各种项目。可以从其<a href="https://git-scm.com/downloads">官网</a>下载安装，具体安装步骤也可从<a href="https://git-scm.com/book/en/v2/Getting-Started-Installing-Git">官网安装教程</a>查询<br>安装完成后，开始菜单中有三个启动图标（Git Bash、Git CMD(Deprecated)、Git GUI）</li></ul><ul><li>Git Bash 是一个shell，是Windows下的命令行工具，可以执行Linux命令；（常用）</li><li>Git CMD 是Windows 操作系统上的命令行解释程序；（反对使用）</li><li>Git GUI 是一个图形用户界面来运行git命令<br>安装完成后，可运行命令 git –version 查看是否安装成功<figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">C:\Users\m&gt;git --version</span><br><span class="line">git version 2.33.0.windows.2</span><br></pre></td></tr></table></figure><h3 id="Hexo安装"><a href="#Hexo安装" class="headerlink" title="Hexo安装"></a>Hexo安装</h3>以管理员身份打开cmd命令行，运行 npm install hexo-cli -g 即可完成安装<br>安装完成后，输入 hexo -v 查看是否安装成功<figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br></pre></td><td class="code"><pre><span class="line">C:\WINDOWS\system32&gt;hexo -v</span><br><span class="line">hexo-cli: 4.3.0</span><br><span class="line">os: win32 10.0.19042</span><br><span class="line">node: 14.18.0</span><br><span class="line">v8: 8.4.371.23-node.84</span><br><span class="line">uv: 1.42.0</span><br><span class="line">zlib: 1.2.11</span><br><span class="line">brotli: 1.0.9</span><br><span class="line">ares: 1.17.2</span><br><span class="line">modules: 83</span><br><span class="line">nghttp2: 1.42.0</span><br><span class="line">napi: 8</span><br><span class="line">llhttp: 2.1.3</span><br><span class="line">openssl: 1.1.1l</span><br><span class="line">cldr: 39.0</span><br><span class="line">icu: 69.1</span><br><span class="line">tz: 2021a</span><br><span class="line">unicode: 13.0</span><br></pre></td></tr></table></figure><h2 id="仓库准备和SSH-keys"><a href="#仓库准备和SSH-keys" class="headerlink" title="仓库准备和SSH keys"></a>仓库准备和SSH keys</h2><h3 id="GitHub-账号注册与仓库搭建"><a href="#GitHub-账号注册与仓库搭建" class="headerlink" title="GitHub 账号注册与仓库搭建"></a>GitHub 账号注册与仓库搭建</h3>首先你需要注册一个github账号，并牢记此github账号的用户名、注册邮箱与密码<br>登入github账号后创建一个新的仓库(repository) <img src="/images/2.png" alt="nodeset2"><img srcs="/images/new.png">命名仓库名为 XXX.github.io (XXX即为你的用户名)，选择仓库为Public状态<img src="/images/new1.png" alt="nodeset2"><img srcs="/images/new1.png"><h3 id="生成SSH-keys"><a href="#生成SSH-keys" class="headerlink" title="生成SSH keys"></a>生成SSH keys</h3>Secure Shell (SSH) 安全外壳协议是一种加密网络协议，SSH 是较可靠，专为远程登录会话和其他网络提供安全性服务的协议，利用此协议可以有效防止远程管理过程中的信息泄露。<br>在任意文件夹中右键选择Git Bash Here, 输入以下命令 ssh-keygen -t rsa -C “你的邮箱”，并按四次回车保持默认设置。<figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br></pre></td><td class="code"><pre><span class="line">$ ssh-keygen -t rsa -C <span class="string">&quot;huzihan0525@gmail.com&quot;</span></span><br><span class="line">Generating public/private rsa key pair.</span><br><span class="line">Enter file <span class="keyword">in</span> <span class="built_in">which</span> to save the key (/c/Users/m/AppData/Roaming/SPB_Data/.ssh/id_rsa):</span><br><span class="line">Enter passphrase (empty <span class="keyword">for</span> no passphrase):</span><br><span class="line">Enter same passphrase again:</span><br><span class="line">Your identification has been saved <span class="keyword">in</span> /c/Users/m/AppData/Roaming/SPB_Data/.ssh/id_rsa</span><br><span class="line">Your public key has been saved <span class="keyword">in</span> /c/Users/m/AppData/Roaming/SPB_Data/.ssh/id_rsa.pub</span><br><span class="line">The key fingerprint is:</span><br><span class="line">SHA256:**********MTtmTZTPB0nnxBUjeyGI********** huzihan0525@gmail.com</span><br><span class="line">The key<span class="string">&#x27;s randomart image is:</span></span><br><span class="line"><span class="string">+---[RSA 3072]----+</span></span><br><span class="line"><span class="string">|o. . +*B o       |</span></span><br><span class="line"><span class="string">|.o+ +.= * o      |</span></span><br><span class="line"><span class="string">|o oo = o + .     |</span></span><br><span class="line"><span class="string">|*************    |</span></span><br><span class="line"><span class="string">|*************    |</span></span><br><span class="line"><span class="string">|*************    |</span></span><br><span class="line"><span class="string">| + E..+..        |</span></span><br><span class="line"><span class="string">|  . o..          |</span></span><br><span class="line"><span class="string">|  .o             |</span></span><br><span class="line"><span class="string">+----[SHA256]-----+</span></span><br></pre></td></tr></table></figure>在此可以看到我的电脑默认将.ssh生成在 /c/Users/m/AppData/Roaming/SPB_Data/.ssh，进入该文件夹，用记事本方式打开文件 “id_rsa.pub”，并复制全部内容。<h3 id="添加SSH-key到GitHub"><a href="#添加SSH-key到GitHub" class="headerlink" title="添加SSH key到GitHub"></a>添加SSH key到GitHub</h3>登入GitHub，点击右上角选择settings - SSH and GPG keys - new SSH key，并将之前从 “id_rsa.pub”复制的key粘贴，此处Title 任意，并保存，<img src="/images/1.png" alt="nodeset2"><img srcs="/images/1.png"><br>测试是否保存成功，在Git Bash Here 中输入 ssh -T <a href="mailto:&#103;&#x69;&#116;&#x40;&#x67;&#105;&#x74;&#104;&#x75;&#98;&#x2e;&#x63;&#111;&#109;">&#103;&#x69;&#116;&#x40;&#x67;&#105;&#x74;&#104;&#x75;&#98;&#x2e;&#x63;&#111;&#109;</a>，并输入yes，显示如下则成功<figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line">$ ssh -T git@github.com</span><br><span class="line">The authenticity of host ‘github.com (13.229.188.59)’ can’t be established.</span><br><span class="line">RSA key fingerprint is SHA256:nThbg6kXUp**************</span><br><span class="line">Are you sure you want to <span class="built_in">continue</span> connecting (yes/no/[fingerprint])?yes</span><br><span class="line">Warning: Permanently added ‘github.com,192.30.255.112’ (RSA) to the list of known hosts.</span><br><span class="line">Hi huzihan0525! You’ve successfully authenticated, but GitHub does not provide hell access.</span><br></pre></td></tr></table></figure><h2 id="生成本地博客并发布"><a href="#生成本地博客并发布" class="headerlink" title="生成本地博客并发布"></a>生成本地博客并发布</h2><h3 id="生成本地博客"><a href="#生成本地博客" class="headerlink" title="生成本地博客"></a>生成本地博客</h3>新建一个本地文件夹存储所需的Blog内容，在”开始菜单”-“Git Bash”-“右键以管理员身份运行”，输入cd “你创建文件夹的位置” ，输入<code>hexo - init</code>，若此时出现”fatal: unable to access…. “，只是因为被墙的网络原因，多试几次即可<figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br></pre></td><td class="code"><pre><span class="line">$ <span class="built_in">cd</span> <span class="string">&quot;E:/Hu zihan/blog&quot;</span></span><br><span class="line">$ hexo init</span><br><span class="line">INFO  Cloning hexo-starter https://github.com/hexojs/hexo-starter.git</span><br><span class="line">fatal: unable to access <span class="string">&#x27;https://github.com/hexojs/hexo-starter.git/&#x27;</span>: OpenSSL SSL_read: Connection was reset, errno 10054</span><br><span class="line">WARN  git <span class="built_in">clone</span> failed. Copying data instead</span><br><span class="line">INFO  Install dependencies</span><br><span class="line">added 242 packages from 207 contributors and audited 243 packages <span class="keyword">in</span> 31.842s</span><br><span class="line"></span><br><span class="line">15 packages are looking <span class="keyword">for</span> funding</span><br><span class="line">  run `npm fund` <span class="keyword">for</span> details</span><br><span class="line"></span><br><span class="line">found 0 vulnerabilities</span><br><span class="line"></span><br><span class="line">INFO  Start blogging with Hexo!</span><br></pre></td></tr></table></figure></li><li>输入<code>hexo g</code>生成静态文件</li><li>输入<code>hexo s</code> 启动服务器，默认情况下，访问网址为： <a href="http://localhost:4000/">http://localhost:4000/</a><br>此时可在浏览器中输入该网址，查看自己博客，但这只是在本地服务器，接下来需要部署到github上<h3 id="部署在Github上"><a href="#部署在Github上" class="headerlink" title="部署在Github上"></a>部署在Github上</h3>打开本地存储Blog的文件（称其为Hexo根目录），打开__config.yml_ 文件，修改其中的deploy部分并保存（注意：冒号后有空格），其中 repository可在自己的仓库中复制，如下<img src="/images/3.png" alt="nodeset2"><img srcs="/images/3.png"><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">deploy:</span><br><span class="line">  type: git</span><br><span class="line">  repository: https://github.com/huzihan0525/huzihan0525.github.io.git</span><br><span class="line">  branch: main</span><br></pre></td></tr></table></figure>在 Hexo根目录文件夹中用管理员身份运行Git Bash，执行 <code>npm install hexo-deployer-git --save</code>, 用npm安装deployer-git，用来将hexo生成的文件推到GitHub<br>执行<code>hexo g</code>生成静态文件，执行<code>hexo d</code>部署网站，此时会弹出窗口让你输入密码，此密码为Personal access tokens，由下获得<br><img src="/images/4.png" alt="nodeset2"><img srcs="/images/4.png">之后选择 Personal access tokens - Generate new token - Note 名字随意，Expiration 期限随意（到期后需重新生成），Select scopes权限建议全部选择 - Generate token<img src="/images/5.png" alt="nodeset2"><img srcs="/images/5.png"><strong>注意：token只生产一次，需要自行复制或截图保存，之后均不能查看，请千万不要将token上传至你的库中</strong>。<br>此时，你的博客已经部署至GitHub上了：）可以登入网站 XXX.github.io查看了：)<br>此后j就可以在本地Hexo根目录 - source - _posts 上传你的博客了：）<h2 id="修改Hexo主题"><a href="#修改Hexo主题" class="headerlink" title="修改Hexo主题"></a>修改Hexo主题</h2>此博客运用的主题为<a href="https://github.com/fi3ework/hexo-theme-archer">Hexo Archer</a>，评论系统运用<a href="https://valine.js.org/">Valine</a>，搜索系统运用<a href="https://www.algolia.com/">Algolia</a>，博客上传使用MarkDown标记语言。更多主题可在 Hexo 官网的<a href="https://hexo.io/themes/">Themes</a>中寻找，其余就需要你们自己探索了。</li></ul><p>立一个flag！希望自己今后学一些前端与后端技术，完成一个博客开发项目。</p>]]></content>
    
    
      
      
    <summary type="html">&lt;span id=&quot;more&quot;&gt;&lt;/span&gt;
&lt;p&gt;在此感谢B站up主&lt;a href=&quot;https://www.bilibili.com/video/BV1Ep411R7cJ&quot;&gt;吃饱睡觉的猫&lt;/a&gt;的视频教程。搭建此静态博客大致分为以下几步：工具准备(node.js, git,</summary>
      
    
    
    
    
  </entry>
  
  <entry>
    <title>Hello World</title>
    <link href="https://huzihan0525.github.io/2021/10/07/hello-world/"/>
    <id>https://huzihan0525.github.io/2021/10/07/hello-world/</id>
    <published>2021-10-07T15:29:53.000Z</published>
    <updated>2021-10-06T16:14:39.999Z</updated>
    
    <content type="html"><![CDATA[<span id="more"></span><p>Welcome to <a href="https://hexo.io/">Hexo</a>! This is your very first post. Check <a href="https://hexo.io/docs/">documentation</a> for more info. If you get any problems when using Hexo, you can find the answer in <a href="https://hexo.io/docs/troubleshooting.html">troubleshooting</a> or you can ask me on <a href="https://github.com/hexojs/hexo/issues">GitHub</a>.</p><h2 id="Quick-Start"><a href="#Quick-Start" class="headerlink" title="Quick Start"></a>Quick Start</h2><h3 id="Create-a-new-post"><a href="#Create-a-new-post" class="headerlink" title="Create a new post"></a>Create a new post</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ hexo new <span class="string">&quot;My New Post&quot;</span></span><br></pre></td></tr></table></figure><p>More info: <a href="https://hexo.io/docs/writing.html">Writing</a></p><h3 id="Run-server"><a href="#Run-server" class="headerlink" title="Run server"></a>Run server</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ hexo server</span><br></pre></td></tr></table></figure><p>More info: <a href="https://hexo.io/docs/server.html">Server</a></p><h3 id="Generate-static-files"><a href="#Generate-static-files" class="headerlink" title="Generate static files"></a>Generate static files</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ hexo generate</span><br></pre></td></tr></table></figure><p>More info: <a href="https://hexo.io/docs/generating.html">Generating</a></p><h3 id="Deploy-to-remote-sites"><a href="#Deploy-to-remote-sites" class="headerlink" title="Deploy to remote sites"></a>Deploy to remote sites</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ hexo deploy</span><br></pre></td></tr></table></figure><mjx-container class="MathJax" jax="SVG"><svg style="vertical-align: -0.985ex" xmlns="http://www.w3.org/2000/svg" width="4.653ex" height="2.942ex" role="img" focusable="false" viewBox="0 -864.9 2056.8 1300.3" xmlns:xlink="http://www.w3.org/1999/xlink"><defs><path id="MJX-1-TEX-N-31" d="M213 578L200 573Q186 568 160 563T102 556H83V602H102Q149 604 189 617T245 641T273 663Q275 666 285 666Q294 666 302 660V361L303 61Q310 54 315 52T339 48T401 46H427V0H416Q395 3 257 3Q121 3 100 0H88V46H114Q136 46 152 46T177 47T193 50T201 52T207 57T213 61V578Z"></path><path id="MJX-1-TEX-I-1D465" d="M52 289Q59 331 106 386T222 442Q257 442 286 424T329 379Q371 442 430 442Q467 442 494 420T522 361Q522 332 508 314T481 292T458 288Q439 288 427 299T415 328Q415 374 465 391Q454 404 425 404Q412 404 406 402Q368 386 350 336Q290 115 290 78Q290 50 306 38T341 26Q378 26 414 59T463 140Q466 150 469 151T485 153H489Q504 153 504 145Q504 144 502 134Q486 77 440 33T333 -11Q263 -11 227 52Q186 -10 133 -10H127Q78 -10 57 16T35 71Q35 103 54 123T99 143Q142 143 142 101Q142 81 130 66T107 46T94 41L91 40Q91 39 97 36T113 29T132 26Q168 26 194 71Q203 87 217 139T245 247T261 313Q266 340 266 352Q266 380 251 392T217 404Q177 404 142 372T93 290Q91 281 88 280T72 278H58Q52 284 52 289Z"></path><path id="MJX-1-TEX-N-32" d="M109 429Q82 429 66 447T50 491Q50 562 103 614T235 666Q326 666 387 610T449 465Q449 422 429 383T381 315T301 241Q265 210 201 149L142 93L218 92Q375 92 385 97Q392 99 409 186V189H449V186Q448 183 436 95T421 3V0H50V19V31Q50 38 56 46T86 81Q115 113 136 137Q145 147 170 174T204 211T233 244T261 278T284 308T305 340T320 369T333 401T340 431T343 464Q343 527 309 573T212 619Q179 619 154 602T119 569T109 550Q109 549 114 549Q132 549 151 535T170 489Q170 464 154 447T109 429Z"></path><path id="MJX-1-TEX-N-2212" d="M84 237T84 250T98 270H679Q694 262 694 250T679 230H98Q84 237 84 250Z"></path></defs><g stroke="currentColor" fill="currentColor" stroke-width="0" transform="scale(1,-1)"><g data-mml-node="math"><g data-mml-node="mfrac"><g data-mml-node="mn" transform="translate(851.6,394) scale(0.707)"><use data-c="31" xlink:href="#MJX-1-TEX-N-31"></use></g><g data-mml-node="mrow" transform="translate(220,-377.4) scale(0.707)"><g data-mml-node="msup"><g data-mml-node="mi"><use data-c="1D465" xlink:href="#MJX-1-TEX-I-1D465"></use></g><g data-mml-node="mn" transform="translate(605,289) scale(0.707)"><use data-c="32" xlink:href="#MJX-1-TEX-N-32"></use></g></g><g data-mml-node="mo" transform="translate(1008.6,0)"><use data-c="2212" xlink:href="#MJX-1-TEX-N-2212"></use></g><g data-mml-node="mn" transform="translate(1786.6,0)"><use data-c="31" xlink:href="#MJX-1-TEX-N-31"></use></g></g><rect width="1816.8" height="60" x="120" y="220"></rect></g></g></g></svg></mjx-container><p>More info: <a href="https://hexo.io/docs/one-command-deployment.html">Deployment</a></p>]]></content>
    
    
      
      
    <summary type="html">&lt;span id=&quot;more&quot;&gt;&lt;/span&gt;
&lt;p&gt;Welcome to &lt;a href=&quot;https://hexo.io/&quot;&gt;Hexo&lt;/a&gt;! This is your very first post. Check &lt;a href=&quot;https://hexo.io/docs</summary>
      
    
    
    
    
  </entry>
  
</feed>
